lr_model = LogisticRegression(max_iter=500, verbose=2, class_weight={1: 2.5, 0: 1})
lr_model.fit(
    X_train,
    y_train,
)
accuracy_lr = lr_model.score(X_test, y_test)
print("Logistic Regression accuracy is :", accuracy_lr)

lr_pred = lr_model.predict(X_test)
report = classification_report(y_test, lr_pred)
print(report)

# set up figure
fig = ff.create_annotated_heatmap(
    confusion_matrix(y_test, lr_pred),
    x=["No Churn", "Churn"],
    y=["No Churn", "Churn"],
    colorscale="Viridis",
)

# add title
fig.update_layout(
    title_text="<i><b>Confusion matrix</b></i>",
    # xaxis = dict(title='x'),
    # yaxis = dict(title='x')
)

# add custom xaxis title
fig.add_annotation(
    dict(
        font=dict(color="black", size=14),
        x=0.5,
        y=-0.15,
        showarrow=False,
        text="Predicted value",
        xref="paper",
        yref="paper",
    )
)

# add custom yaxis title
fig.add_annotation(
    dict(
        font=dict(color="black", size=14),
        x=-0.15,
        y=0.5,
        showarrow=False,
        text="Real value",
        textangle=-90,
        xref="paper",
        yref="paper",
    )
)

# adjust margins to make room for yaxis title
fig.update_layout(margin=dict(t=50, l=200))

# add colorbar
fig["data"][0]["showscale"] = True
fig.show()