for feat in cat_cols[:-1]:
    # Replace Unknown values with 'inconnu'
    df.loc[df[feat].isnull(), feat] = "inconnu"

    x_df = df[[feat, "churn"]].value_counts(dropna=False).reset_index()

    fig = make_subplots(
        rows=1, cols=2, specs=[[{"type": "domain"}, {"type": "domain"}]]
    )

    x_df_churn = x_df[x_df.churn == 1]
    x_df_no_churn = x_df[x_df.churn != 1]

    print(feat)

    fig.add_trace(
        go.Pie(
            labels=x_df_no_churn[feat],
            values=x_df_no_churn["count"].values,
            name="No Churn",
        ),
        1,
        1,
    )

    fig.add_trace(
        go.Pie(
            labels=x_df_churn[feat], values=x_df_churn["count"].values, name="Churn"
        ),
        1,
        2,
    )

    # Use `hole` to create a donut-like pie chart
    fig.update_traces(hole=0.4, hoverinfo="label+percent+name")

    fig.update_layout(
        title_text=f"{feat} Distribution",
        # Add annotations in the center of the donut pies.
        annotations=[
            dict(text="No Churn", x=0.18, y=0.5, font_size=20, showarrow=False),
            dict(text="Yes Churn", x=0.82, y=0.5, font_size=20, showarrow=False),
        ],
    )
    fig.show()